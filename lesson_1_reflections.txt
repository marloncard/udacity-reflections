How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The changes were exclusively shown meaning I didn't need to search for them.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If mistakes are made I can find them quickly; undoing mistakes is easier;
    I can go back to an earlier version if needed. I can review my progression
    to the current version.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros are I have more control, as I should know what's most important; I'll
    have less versions to search through and should have a better grasp of
    where something changed.
    Cons are I might not save a change that I end up needing. I might have too
    many copies and be unable to locate what I need.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is geared towards development and files tend to be related and must
    subsequently be saved together while google docs handles separate documents
    that are not necessarily tied together.

How can you use the commands git log and git diff to view the history of files?

    Git log will allow me to see an overview of all the commits and find the
    right ones and diff will allow me to compare file contents and review
    changes.

How might using version control make you more confident to make changes that
could break something?

    I will not be afraid to experiment because I can revert to an earlier
    version at any time.

Now that you have your workspace set up, what do you want to try using Git for?

    I want build a website, or write a short story.
